@page "/login"
@using TicketSwap.Shared
@inject HttpClient _http
@inject ISessionStorageService _session
@inject NavigationManager _navMgr

<h3>Login</h3>

<form>
    <div class="form-group">
        <label for="exampleInputEmail1">Username</label>
        <input @bind="@username" type="text" class="form-control" id="exampleInputEmail1" aria-describedby="emailHelp" placeholder="Enter username">
    </div>
    <div class="form-group">
        <label for="exampleInputPassword1">Password</label>
        <input @bind="@password" type="password" class="form-control" id="exampleInputPassword1" placeholder="Password">
    </div>
    <button @onclick="async() => await SendLogin()" type="button" class="btn btn-primary">Login</button>
</form>

@code {
    private string username = string.Empty, password = string.Empty;

    protected async override Task OnInitializedAsync()
    {
        var token = await _session.GetItemAsync<string>("token");
        if (token != null && token.Length > 3)
        {
            await _session.ClearAsync();
        }
    }

    private async Task SendLogin()
    {
        LoginViewModel loginToSend = new LoginViewModel()
        {
            Username = username,
            Password = password
        };
        var httpRes = await _http.PostAsJsonAsync<LoginViewModel>("/api/user/login", loginToSend);
        var loginRes = await httpRes.Content.ReadFromJsonAsync<LoginResponse>();
        await _session.SetItemAsync<string>("token", loginRes.Token);
        _navMgr.NavigateTo("/tickets");
    }
}
